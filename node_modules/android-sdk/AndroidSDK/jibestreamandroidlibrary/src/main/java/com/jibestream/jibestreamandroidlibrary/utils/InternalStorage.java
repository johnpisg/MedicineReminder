package com.jibestream.jibestreamandroidlibrary.utils;

import android.content.Context;
import android.content.ContextWrapper;
import android.graphics.Bitmap;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

/**
 * Created by emmanuel on 15-06-10.
 */
public class InternalStorage {

public static boolean fileExists(Context context, String name) {
  File file = context.getFileStreamPath(name);
  return file.exists();
}

/**
 * Helper to save a file
 *
 * @param context
 * @param filename
 * @param contents
 * @return
 */
public static boolean saveFile(Context context, String filename, String contents) {
  boolean success = false;
  try {
    FileOutputStream outputStream = context.openFileOutput(filename, Context.MODE_PRIVATE);
    outputStream.write(contents.getBytes());
    outputStream.flush();
    outputStream.close();
    success = true;
  } catch (FileNotFoundException e) {
    e.printStackTrace();
  } catch (IOException e) {
    e.printStackTrace();
  }
  return success;
}

/**
 * Helper to read a file
 *
 * @param context
 * @param filename
 * @return
 */
public static String readFile(Context context, String filename) throws IOException {
  String out = "";
  InputStream inputStream = context.openFileInput(filename);
  if (inputStream != null) {
    InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
    BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
    String receiveString = "";
    StringBuilder stringBuilder = new StringBuilder();
    while ((receiveString = bufferedReader.readLine()) != null) {
      stringBuilder.append(receiveString);
    }
    inputStream.close();
    out = stringBuilder.toString();
  }
  return out;
}

/**
 * Helper to save a bitmap
 *
 * @param context
 * @param bitmapImage
 * @param filename
 * @return
 */
private static void saveBitmap(Context context, Bitmap bitmapImage, String filename) throws IOException {
  ContextWrapper contextWrapper = new ContextWrapper(context.getApplicationContext());
  File directory = contextWrapper.getDir("images", Context.MODE_PRIVATE);
  File mypath = new File(directory, filename);

  FileOutputStream fileOutputStream = null;
  fileOutputStream = new FileOutputStream(mypath);
  // Use the compress method on the BitMap object to write image to the OutputStream
  bitmapImage.compress(Bitmap.CompressFormat.PNG, 100, fileOutputStream);
  fileOutputStream.close();
}
}
