package com.jibestream.jibestreamandroidlibrary.shapes;

import android.graphics.Canvas;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.graphics.Rect;
import android.graphics.RectF;

import com.jibestream.jibestreamandroidlibrary.main.M;
import com.jibestream.jibestreamandroidlibrary.styles.CssStyles;
import com.jibestream.jibestreamandroidlibrary.utils.MatrixUtils;

/**
 * Text shape within a constrained width and height
 * abstraction for easy canvas calls
 * Created by emmanuel on 15-05-14.
 */
public class TextFit extends Text implements IShapeTextBox {

public static float PADDING = 0.8f;
private Paint.Align textAlign = Paint.Align.CENTER;
private float minTextSize = 1;
private float maxTextSize = 22;
private float width;
private float height;
private float textSize;
private float textOffset;
private Paint textPaintCalc;
private Rect bounds = new Rect();

public TextFit() {
  this("Text");
}

public TextFit(String text) {
  super(text);
  textPaintCalc = new Paint();
  calc();
}

public synchronized void setTextString(String textString) {
  super.setTextString(textString);
  this.textString = textString;
  calc();
}

public synchronized float getWidth() {
  return width;
}

public synchronized void setWidth(float width) {
  this.width = width;
  calc();
}

public synchronized float getHeight() {
  return height;
}

public synchronized void setHeight(float height) {
  this.height = height;
  calc();
}

public synchronized float getMinTextSize() {
  return minTextSize;
}

public synchronized void setMinTextSize(float minTextSize) {
  this.minTextSize = minTextSize;
  calc();
}

public synchronized float getMaxTextSize() {
  return maxTextSize;
}

public synchronized void setMaxTextSize(float maxTextSize) {
  this.maxTextSize = maxTextSize;
  calc();
}


public synchronized Paint.Align getTextAlign() {
  return textAlign;
}

public synchronized void setTextAlign(Paint.Align textAlign) {
  this.textAlign = textAlign;
  calc();
}

private void calc() {
  if (textString == null) return;
  textPaintCalc.setTextAlign(textAlign);
  textPaintCalc.setTextSize(100);
  textPaintCalc.setTextScaleX(1.0f);
  textPaintCalc.getTextBounds(textString, 0, textString.length(), bounds);
  textSize = ((width * PADDING / bounds.width()) * 100f);
  textSize = Math.min(Math.max(minTextSize, textSize), maxTextSize);
  textPaintCalc.setTextSize(textSize);
  textPaintCalc.getTextBounds(textString, 0, textString.length(), bounds);
  textOffset = bounds.height() * 0.5f;
  RectF bbox = new RectF(bounds);
  bbox.offset(bounds.width() * -0.5f, textOffset);
  setBBox(bbox);
}


@Override
public void onDraw(Canvas canvas, Paint paint) {
  paint.setTextSize(textSize);
  paint.setTextAlign(textAlign);
  //
  canvas.drawText(textString, 0, textOffset, paint);
}
}
