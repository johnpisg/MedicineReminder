package com.jibestream.jibestreamandroidlibrary.mapBuilderV3.dataObjects;

import android.graphics.Bitmap;
import android.os.Parcel;
import android.os.Parcelable;

/**
 * Imformation holder of various UXM components
 */
public class AmenityBean implements Parcelable {

/**
 * Internal ID of a bean
 */
public Integer componentId;
/**
 *
 * Type ID of a bean
 */
public Integer componentTypeId;
/**
 * Type name of a bean
 */
public String componentTypeName;
/**
 * Description of a bean
 */
public String description;
/**
 * destinations linked with a bean
 */
public int[] destinations;
/**
 * Start date of a bean(applicable to schedulable bean
 */
public long startDate;
/**
 * End date of a bean(applicable to schedulable bean
 */
public long endDate;
/**
 * Local specific description of a bean
 */
public String localizedText;
/**
 * Rotation angle of a bean
 */
public String position;
/**
 * Project ID of a bean
 */
public Integer projectId;
/**
 * Image of a bean
 */
public String filePath;
/**
 * Iconic image of a bean
 */
public String iconImagePath;
//////////////////////////////
//Populated from Android SDK
//////////////////////////////
/**
 * The svg DOM
 */
public String filePathSVG;

@Override
public int describeContents() {
  return 0;
}

@Override
public void writeToParcel(Parcel dest, int flags) {
  dest.writeValue(this.componentId);
  dest.writeValue(this.componentTypeId);
  dest.writeString(this.componentTypeName);
  dest.writeString(this.description);
  dest.writeIntArray(this.destinations);
  dest.writeLong(this.startDate);
  dest.writeLong(this.endDate);
  dest.writeString(this.localizedText);
  dest.writeString(this.position);
  dest.writeValue(this.projectId);
  dest.writeString(this.filePath);
  dest.writeString(this.iconImagePath);
  dest.writeString(this.filePathSVG);
}

public AmenityBean() {
}

protected AmenityBean(Parcel in) {
  this.componentId = (Integer) in.readValue(Integer.class.getClassLoader());
  this.componentTypeId = (Integer) in.readValue(Integer.class.getClassLoader());
  this.componentTypeName = in.readString();
  this.description = in.readString();
  this.destinations = in.createIntArray();
  this.startDate = in.readLong();
  this.endDate = in.readLong();
  this.localizedText = in.readString();
  this.position = in.readString();
  this.projectId = (Integer) in.readValue(Integer.class.getClassLoader());
  this.filePath = in.readString();
  this.iconImagePath = in.readString();
  this.filePathSVG = in.readString();
}

public static final Parcelable.Creator<AmenityBean> CREATOR = new Parcelable.Creator<AmenityBean>() {
  public AmenityBean createFromParcel(Parcel source) {
    return new AmenityBean(source);
  }

  public AmenityBean[] newArray(int size) {
    return new AmenityBean[size];
  }
};
}
