package com.jibestream.jibestreamandroidlibrary.elements;

import android.content.Context;
import android.graphics.Color;
import android.graphics.Matrix;
import android.graphics.Paint;

import com.jibestream.jibestreamandroidlibrary.main.Camera;
import com.jibestream.jibestreamandroidlibrary.main.M;
import com.jibestream.jibestreamandroidlibrary.mapBuilderV3.astar.Point;
import com.jibestream.jibestreamandroidlibrary.mapBuilderV3.dataObjects.Destination;
import com.jibestream.jibestreamandroidlibrary.mapBuilderV3.dataObjects.Waypoint;
import com.jibestream.jibestreamandroidlibrary.math.Transform;
import com.jibestream.jibestreamandroidlibrary.shapes.IShapeTextBox;
import com.jibestream.jibestreamandroidlibrary.shapes.TextFit;
import com.jibestream.jibestreamandroidlibrary.styles.RenderStyle;

import java.util.Arrays;

/**
 * Labels of Units
 * Created by emmanuel on 15-07-05.
 */
public class UnitLabel extends ElementMap implements IPreProcessedElem {
public static int unitLabelsID = 0;
protected String textString = "";
protected Destination[] Destinations;
protected Waypoint[] waypoints;
protected int[] destinationIDs;
protected int[] waypointIDs;
protected float width;
protected float height;
private final IShapeTextBox textFit;
public Matrix lBoxMatrix;
public Point[] lBox = new Point[4];
public final float[] lBoxLines = new float[16];

public UnitLabel() {
  super();
  unitLabelsID++;
  //
  textFit = new TextFit();
  setShape(textFit);

  styleIdle = new RenderStyle(Paint.Style.FILL);
  styleIdle.paintFill.setColor(Color.BLACK);
  styleIdle.paintFill.setAntiAlias(true);
  setHeadsUpFlip(true);
//  setBoundingBoxVisible(true);
}

@Override
public void onCreate(Context context, M m, long timeElapsed, long timeTotal, Camera camera) {
  super.onCreate(context, m, timeElapsed, timeTotal, camera);
  //
  lBoxLines[0] = (float) lBox[0].x;
  lBoxLines[1] = (float) lBox[0].y;
  lBoxLines[2] = (float) lBox[1].x;
  lBoxLines[3] = (float) lBox[1].y;
  lBoxLines[4] = (float) lBox[1].x;
  lBoxLines[5] = (float) lBox[1].y;
  lBoxLines[6] = (float) lBox[2].x;
  lBoxLines[7] = (float) lBox[2].y;
  lBoxLines[8] = (float) lBox[2].x;
  lBoxLines[9] = (float) lBox[2].y;
  lBoxLines[10] = (float) lBox[3].x;
  lBoxLines[11] = (float) lBox[3].y;
  lBoxLines[12] = (float) lBox[3].x;
  lBoxLines[13] = (float) lBox[3].y;
  lBoxLines[14] = (float) lBox[0].x;
  lBoxLines[15] = (float) lBox[0].y;


  final Matrix globalMatrix = new Matrix(getTransform().getGlobalMatrix());
  final Matrix inverse = new Matrix();
  globalMatrix.invert(inverse);
  inverse.mapPoints(lBoxLines);
}

public int[] getDestinationIDs() {
  return destinationIDs;
}

public void setDestinationIDs(int[] destinationIDs) {
  this.destinationIDs = destinationIDs;
}

public int[] getWaypointIDs() {
  return waypointIDs;
}

public void setWaypointIDs(int[] waypointIDs) {
  this.waypointIDs = waypointIDs;
}

public Destination[] getDestinations() {
  return Destinations;
}

public void setDestinations(Destination[] destinations) {
  this.Destinations = destinations;
}

public Waypoint[] getWaypoints() {
  return waypoints;
}

public void setWaypoints(Waypoint[] waypoints) {
  this.waypoints = waypoints;
}

public String getText() {
  return textString;
}

public void setText(String s) {
  textString = s;
  textFit.setTextString(s);
}

public float getWidth() {
  return width;
}

public void setWidth(float width) {
  this.width = width;
  textFit.setWidth(width);
}

public float getHeight() {
  return height;
}

public void setHeight(float height) {
  this.height = height;
  textFit.setHeight(height);
}
}

