package com.jibestream.jibestreamandroidlibrary.elements;

import android.graphics.Canvas;
import android.graphics.Paint;

import com.jibestream.jibestreamandroidlibrary.shapes.IShape;
import com.jibestream.jibestreamandroidlibrary.styles.IRenderStyle;
import com.jibestream.jibestreamandroidlibrary.styles.RenderStyle;
import com.jibestream.jibestreamandroidlibrary.utils.ColorsMaterialDesign;

import java.util.HashMap;

/**
 * Created by emmanuel on 2015-10-27.
 */
public class ElementMap extends Element implements IRenderStyle {
protected volatile RenderStyle styleIdle;
protected volatile RenderStyle styleSelected;
protected volatile RenderStyle styleHighlighted;

public ElementMap() {

  styleIdle = new RenderStyle(Paint.Style.FILL);
  styleIdle.paintFill.setColor(ColorsMaterialDesign.GREY6);

  styleSelected = new RenderStyle(Paint.Style.FILL_AND_STROKE);
  styleSelected.setFillColor(ColorsMaterialDesign.RED6);
  styleSelected.setStrokeColor(ColorsMaterialDesign.GREY8);
  styleSelected.setStrokeWidth(2);

  styleHighlighted = new RenderStyle(Paint.Style.FILL);
  styleHighlighted.setFillColor(ColorsMaterialDesign.RED3);
}

@Override
public void onRender(final Canvas canvas, final Paint touchPaint) {
  final IShape iShape = getShape();
  if (iShape == null) return;
  final float elementOffsetX = getOffsetX();
  final float elementOffsetY = getOffsetY();
  final float iShapeOffsetX = iShape.getOffsetX();
  final float iShapeOffsetY = iShape.getOffsetY();
  final boolean translateCanvas = elementOffsetX != 0 || elementOffsetY != 0 || iShapeOffsetX != 0 || iShapeOffsetY != 0;
  if (translateCanvas) {
    canvas.save();
    canvas.translate(elementOffsetX + iShapeOffsetX, elementOffsetY + iShapeOffsetY);
  }
  //
  if (touchPaint != null) {
    iShape.onDraw(canvas, touchPaint);
  } else {
    if (styleIdle != null) {
      if (styleIdle.paintFill != null) {
        iShape.onDraw(canvas, styleIdle.paintFill);
      }
      if (styleIdle.paintStroke != null) {
        iShape.onDraw(canvas, styleIdle.paintStroke);
      }
    }
    if (isHighlightable() && isHighlightState() && styleHighlighted != null) {
      if (styleHighlighted.paintFill != null) {
        iShape.onDraw(canvas, styleHighlighted.paintFill);
      }
      if (styleHighlighted.paintStroke != null) {
        iShape.onDraw(canvas, styleHighlighted.paintStroke);
      }
    }
    if (isSelectable() && isSelectState() && styleSelected != null) {
      if (styleSelected.paintFill != null) {
        iShape.onDraw(canvas, styleSelected.paintFill);
      }
      if (styleSelected.paintStroke != null) {
        iShape.onDraw(canvas, styleSelected.paintStroke);
      }
    }
  }
  if (isBoundingBoxVisible()) {
    canvas.drawRect(getShape().getBBox(), paintDebug);
  }
  //
  if (translateCanvas) {
    canvas.restore();
  }
}

public RenderStyle getStyleIdle() {
  return styleIdle;
}

public void setStyleIdle(RenderStyle style) {
  this.styleIdle = style;
}

public RenderStyle getStyleSelected() {
  return styleSelected;
}

public void setStyleSelected(RenderStyle style) {
  this.styleSelected = style;
}

public RenderStyle getStyleHighlighted() {
  return styleHighlighted;
}

public void setStyleHighlighted(RenderStyle style) {
  this.styleHighlighted = style;
}

}
