package com.jibestream.jibestreamandroidlibrary.styles;

import android.graphics.Color;
import android.graphics.Paint;
import android.os.Parcel;
import android.os.Parcelable;

import com.jibestream.jibestreamandroidlibrary.main.M;

/**
 * Created by emmanuel on 15-08-21.
 */
public class RenderStyleDO implements Parcelable {
/*
The Data Object for a RenderStyle
 */
public String name;
public PaintFillDO fill;
public PaintStrokeDO stroke;

public static RenderStyle getRenderStyle(RenderStyleDO renderStyleDO,M m) {
  RenderStyle style = null;
  if (renderStyleDO.fill != null && renderStyleDO.stroke != null) {
    style = new RenderStyle(renderStyleDO.name, Paint.Style.FILL_AND_STROKE);
  } else if (renderStyleDO.fill != null) {
    style = new RenderStyle(renderStyleDO.name, Paint.Style.FILL);
  } else if (renderStyleDO.stroke != null) {
    style = new RenderStyle(renderStyleDO.name, Paint.Style.STROKE);
  }
  try {
    if (renderStyleDO.fill != null) {
      if (renderStyleDO.fill.color != null)
        style.paintFill.setColor(Color.parseColor(renderStyleDO.fill.color));
      style.paintFill.setAlpha((int) (renderStyleDO.fill.alpha * 255f));
      style.paintFill.setAntiAlias(true);
    }
    if (renderStyleDO.stroke != null) {
      if (renderStyleDO.stroke.color != null)
        style.paintStroke.setColor(Color.parseColor(renderStyleDO.stroke.color));
      style.paintStroke.setAlpha((int) (renderStyleDO.stroke.alpha * 255f));
      if (renderStyleDO.stroke.strokeWidth != 0)
        style.paintStroke.setStrokeWidth(renderStyleDO.stroke.strokeWidth);
      style.paintStroke.setAntiAlias(true);
    }
    m.cssStyles.setRenderStyle(renderStyleDO.name, style, true);
  } catch (IllegalArgumentException ex) {
    ex.printStackTrace();
  }
  return style;
}

@Override
public int describeContents() {
  return 0;
}

@Override
public void writeToParcel(Parcel dest, int flags) {
  dest.writeString(this.name);
  dest.writeParcelable(this.fill, 0);
  dest.writeParcelable(this.stroke, 0);
}

public RenderStyleDO() {
}

protected RenderStyleDO(Parcel in) {
  this.name = in.readString();
  this.fill = in.readParcelable(PaintFillDO.class.getClassLoader());
  this.stroke = in.readParcelable(PaintStrokeDO.class.getClassLoader());
}

public static final Parcelable.Creator<RenderStyleDO> CREATOR = new Parcelable.Creator<RenderStyleDO>() {
  public RenderStyleDO createFromParcel(Parcel source) {
    return new RenderStyleDO(source);
  }

  public RenderStyleDO[] newArray(int size) {
    return new RenderStyleDO[size];
  }
};
}





