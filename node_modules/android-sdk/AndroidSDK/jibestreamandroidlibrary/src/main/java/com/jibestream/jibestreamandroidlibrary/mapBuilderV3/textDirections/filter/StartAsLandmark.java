package com.jibestream.jibestreamandroidlibrary.mapBuilderV3.textDirections.filter;

import com.jibestream.jibestreamandroidlibrary.mapBuilderV3.textDirections.Helpers;
import com.jibestream.jibestreamandroidlibrary.mapBuilderV3.textDirections.TDInstruction;

import java.util.ArrayList;

/**
 * Created by frankduffy on 2016-01-27.
 */
public class StartAsLandmark {

    public void startAsLandmark(TDFilterInput inst) {

        if(inst.useArrayOfFloorWaypoints == inst.wayfindArray[0]) {
            // On first floor!
            // See if next text direction is using start-destination and if it does, fold it, taking its direction as first.

            // Take first
            Helpers hlp = new Helpers();

            TDInstruction firstInstruction = inst.textDirectionsFloorArray.get(0);

            // Take ONLY !next!
            if (inst.textDirectionsFloorArray.size() > 0) {
                TDInstruction currentInstruction = inst.textDirectionsFloorArray.get(1);

                // If landmarkDestination same as Destination, fold next into first
                if (firstInstruction.destination != null) {
                    if (currentInstruction.landmarkDestination.id == firstInstruction.destination.id) {
                        // Copy direction
                        // Apply its direction to first
                        firstInstruction.direction = currentInstruction.direction;
                        // Rebuild output
                        ArrayList<String> stringList = new ArrayList<String>();
                        stringList.add("With % behind you, go %");
                        stringList.add(firstInstruction.destination.name);
                        stringList.add(firstInstruction.direction);
                        firstInstruction.output = hlp.stringWithFormat(stringList);
                        // Fold current into firstConsecutiveInstruction
                        firstInstruction.foldInFront(currentInstruction);
                        // Remove from textDirectionsFloorArray
                        inst.textDirectionsFloorArray.remove(1);
                    }
                }
            }
        }
    }
}