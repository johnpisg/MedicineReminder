package com.jibestream.jibestreamandroidlibrary.utils;

import android.graphics.Bitmap;
import android.util.Base64;

import java.io.ByteArrayOutputStream;
import java.util.Random;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * Created by emmanuel on 15-06-04.
 */
public class Strings {

public static String getRandString() {
  String CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
  StringBuilder stringBuilder = new StringBuilder();
  Random rnd = new Random();
  while (stringBuilder.length() < 8) {
    int index = (int) (rnd.nextFloat() * CHARS.length());
    stringBuilder.append(CHARS.charAt(index));
  }
  String deString = stringBuilder.toString();
  return deString;
}

/**
 * Does the path contain a bitmap extension
 * Check whether there is a .png or .jpg in the string
 *
 * @param link
 * @return
 */
public static boolean hasDotPNGrJPGrJPEG(String link) {
  if (link == null) return false;
  boolean isBinary = link.indexOf(".png") >= 0;
  isBinary = isBinary || link.indexOf(".jpg") >= 0;
  isBinary = isBinary || link.indexOf(".jpeg") >= 0;
  return isBinary;
}

/**
 * Does the path contain a SVG extension
 *
 * @param link
 * @return
 */
public static boolean hasDotSVG(String link) {
  boolean isBinary = link.indexOf(".svg") > -1;
  return isBinary;
}

/**
 * Get the href value from the anchor element
 *
 * @param anchor
 * @return
 */
public static String getHrefFromAnchor(String anchor) {
  String string = null;
  Matcher matcher = Pattern.compile("href *= *(\'|\")(.*?)(\'|\")").matcher(anchor);
  if (matcher.find()) string = matcher.group(2);
  return string;
}

public String base64(Bitmap bitmap) {
  ByteArrayOutputStream stream = new ByteArrayOutputStream();
  bitmap.compress(Bitmap.CompressFormat.PNG, 100, stream);
  byte[] bytes = stream.toByteArray();
  return Base64.encodeToString(bytes, Base64.NO_WRAP);
}

public static boolean hasProtocol(String link) {
  if (link == null) return false;
  boolean isBinary = false;
  isBinary = isBinary || link.startsWith("http://");
  isBinary = isBinary || link.startsWith("https://");
  isBinary = isBinary || link.startsWith("ftp://");
  return isBinary;
}
}
