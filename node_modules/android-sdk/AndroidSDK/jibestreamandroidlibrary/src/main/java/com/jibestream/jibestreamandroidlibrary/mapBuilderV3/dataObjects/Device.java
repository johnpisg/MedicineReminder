package com.jibestream.jibestreamandroidlibrary.mapBuilderV3.dataObjects;

import android.os.Parcel;
import android.os.Parcelable;

/**
 * The device information holder
 */
public class Device implements Parcelable {
/**
 * Internal ID of a device
 */
public int id;
/**
 * What type of this device is
 */
public String deviceTypeDescription;
/**
 * ID of the type this device is
 */
public int deviceTypeId;
/**
 * Explanatory description of this device
 */
public String description;
/**
 * Enabled or Disabled status
 */
public String status;
/**
 * Positional heading North/South etc...
 */
public int heading;
/**
 * The ID of location this device mapped to
 */
public int locationId;
/**
 * The ID of a map
 */
public int mapId;
/**
 * The project ID to which this device belongs
 */
public int projectId;
/**
 * X location of this devie on map
 */
public String locationX;
/**
 * Y location of this devie on map
 */
public String locationY;
/**
 * ElementIcon associated with ths device
 */
public String icon;
/**
 * The Id of a template this device runs
 */
public Integer templateId;
/**
 * The name of a template this device runs
 */
public String templateName;
/**
 * Device health
 */
public String health;
/**
 * Device wpid
 */
public Integer wpid;
/**
 * Is device a kiosk:(true/false)
 */
public Boolean kiosk;
/**
 * The name of a device
 */
public String name;
/**
 * The lat. for device
 */
public String latitude;
/**
 * The long. for device
 */
public String logitude;
/**
 * The lat. of terminal
 */
public String latTerminal;
/**
 * The long of terminal
 */
public String lngTerminal;
/**
 * The setZoom level set for device
 */
public String setZoom;
/**
 * The client deviceID
 */
public String clientDeviceId;
/**
 * The device meta data
 */
public String metaData;
/**
 * Group this device belong to
 */
public String deviceGroup;
/**
 * The last pubished time of this device
 */
public String lastPublished;
/**
 * The last polled time of this device from server
 */
public String lastPolled;

@Override
public int describeContents() {
  return 0;
}

@Override
public void writeToParcel(Parcel dest, int flags) {
  dest.writeInt(this.id);
  dest.writeString(this.deviceTypeDescription);
  dest.writeInt(this.deviceTypeId);
  dest.writeString(this.description);
  dest.writeString(this.status);
  dest.writeInt(this.heading);
  dest.writeInt(this.locationId);
  dest.writeInt(this.mapId);
  dest.writeInt(this.projectId);
  dest.writeString(this.locationX);
  dest.writeString(this.locationY);
  dest.writeString(this.icon);
  dest.writeValue(this.templateId);
  dest.writeString(this.templateName);
  dest.writeString(this.health);
  dest.writeValue(this.wpid);
  dest.writeValue(this.kiosk);
  dest.writeString(this.name);
  dest.writeString(this.latitude);
  dest.writeString(this.logitude);
  dest.writeString(this.latTerminal);
  dest.writeString(this.lngTerminal);
  dest.writeString(this.setZoom);
  dest.writeString(this.clientDeviceId);
  dest.writeString(this.metaData);
  dest.writeString(this.deviceGroup);
  dest.writeString(this.lastPublished);
  dest.writeString(this.lastPolled);
}

public Device() {
}

protected Device(Parcel in) {
  this.id = in.readInt();
  this.deviceTypeDescription = in.readString();
  this.deviceTypeId = in.readInt();
  this.description = in.readString();
  this.status = in.readString();
  this.heading = in.readInt();
  this.locationId = in.readInt();
  this.mapId = in.readInt();
  this.projectId = in.readInt();
  this.locationX = in.readString();
  this.locationY = in.readString();
  this.icon = in.readString();
  this.templateId = (Integer) in.readValue(Integer.class.getClassLoader());
  this.templateName = in.readString();
  this.health = in.readString();
  this.wpid = (Integer) in.readValue(Integer.class.getClassLoader());
  this.kiosk = (Boolean) in.readValue(Boolean.class.getClassLoader());
  this.name = in.readString();
  this.latitude = in.readString();
  this.logitude = in.readString();
  this.latTerminal = in.readString();
  this.lngTerminal = in.readString();
  this.setZoom = in.readString();
  this.clientDeviceId = in.readString();
  this.metaData = in.readString();
  this.deviceGroup = in.readString();
  this.lastPublished = in.readString();
  this.lastPolled = in.readString();
}

public static final Parcelable.Creator<Device> CREATOR = new Parcelable.Creator<Device>() {
  public Device createFromParcel(Parcel source) {
    return new Device(source);
  }

  public Device[] newArray(int size) {
    return new Device[size];
  }
};
}
