package com.jibestream.jibestreamandroidlibrary.styles;

import android.util.Log;

import com.jibestream.jibestreamandroidlibrary.utils.ColorsMaterialDesign;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;

/**
 * IconStyles library
 * Created by emmanuel on 15-05-21.
 * <p/>
 * A library class to aggregate IconStyles styles for easy access through the application
 */
public class IconStyles {
private final static String TAG = "IconStyles";
public final static String DEFAULT_IDLE = "default idle";
public final static String DEFAULT_SELECTED = "default selected";
public final static String DEFAULT_HIGHLIGHTED = "default highlighted";
public final static String AMENITYS_IDLE = "Amenity`s idle";
public final static String AMENITYS_SELECTED = "Amenity`s selected";
public final static String MOVERS = "Movers";
private final Map<String, RenderStyleIcon> RENDER_STYLES = new HashMap<>();

public IconStyles() {
  final RenderStyleIcon styleDefaultIdle = new RenderStyleIcon();
  styleDefaultIdle.renderStyleBG.paintFill.setColor(ColorsMaterialDesign.GREY9);
  styleDefaultIdle.renderStyleMG.paintFill.setColor(ColorsMaterialDesign.GREY6);
  styleDefaultIdle.renderStyleFG.paintFill.setColor(ColorsMaterialDesign.GREY3);
  setRenderStyleIcon(DEFAULT_IDLE, styleDefaultIdle, true);

  final RenderStyleIcon styleDefaultSelected = new RenderStyleIcon();
  styleDefaultSelected.renderStyleBG.paintFill.setColor(ColorsMaterialDesign.GREY3);
  styleDefaultSelected.renderStyleMG.paintFill.setColor(ColorsMaterialDesign.GREY6);
  styleDefaultSelected.renderStyleFG.paintFill.setColor(ColorsMaterialDesign.GREY9);
  setRenderStyleIcon(DEFAULT_SELECTED, styleDefaultSelected, true);

  final RenderStyleIcon styleDefaultHighlighted = new RenderStyleIcon();
  styleDefaultHighlighted.renderStyleBG.paintFill.setColor(ColorsMaterialDesign.GREY3);
  styleDefaultHighlighted.renderStyleMG.paintFill.setColor(ColorsMaterialDesign.GREY9);
  styleDefaultHighlighted.renderStyleFG.paintFill.setColor(ColorsMaterialDesign.GREY6);
  setRenderStyleIcon(DEFAULT_HIGHLIGHTED, styleDefaultHighlighted, true);

  RenderStyleIcon styleAmenIdle = new RenderStyleIcon();
  styleAmenIdle.renderStyleBG.paintFill.setColor(ColorsMaterialDesign.GREY9);
  styleAmenIdle.renderStyleMG.paintFill.setColor(ColorsMaterialDesign.GREY6);
  styleAmenIdle.renderStyleFG.paintFill.setColor(ColorsMaterialDesign.GREY3);
  setAmenitysIdle(styleAmenIdle, true);

  RenderStyleIcon styleAmenSelected = new RenderStyleIcon();
  styleAmenSelected.renderStyleBG.paintFill.setColor(ColorsMaterialDesign.GREY3);
  styleAmenSelected.renderStyleMG.paintFill.setColor(ColorsMaterialDesign.GREY6);
  styleAmenSelected.renderStyleFG.paintFill.setColor(ColorsMaterialDesign.GREY9);
  setAmenitysSelected(styleAmenSelected, true);

  RenderStyleIcon styleMovers = new RenderStyleIcon();
  styleMovers.renderStyleBG.paintFill.setColor(ColorsMaterialDesign.GREY9);
  styleMovers.renderStyleMG.paintFill.setColor(ColorsMaterialDesign.REDJS);
  styleMovers.renderStyleFG.paintFill.setColor(ColorsMaterialDesign.GREY3);
  setMovers(styleMovers, true);
}

public void setRenderStyleIcon(String name, RenderStyleIcon RenderStyleIcon, boolean overideIfExists) {
  if (overideIfExists) {
    RenderStyleIcon aRenderStyleIcon = getRenderStyleIcon(name);
    if (aRenderStyleIcon != null) {
      aRenderStyleIcon.renderStyleBG.set(RenderStyleIcon.renderStyleBG);
      aRenderStyleIcon.renderStyleMG.set(RenderStyleIcon.renderStyleMG);
      aRenderStyleIcon.renderStyleFG.set(RenderStyleIcon.renderStyleFG);
    } else {
      RENDER_STYLES.put(name, RenderStyleIcon);
    }
  } else {
    if (getRenderStyleIcon(name) == null) {
      RENDER_STYLES.put(name, RenderStyleIcon);
    }
  }
}

/**
 * Utility fn list the keys for all entries
 */
public void listStyles() {
  final Set<String> strings = RENDER_STYLES.keySet();
  for (String name : strings) {
    Log.i(TAG, name);
  }
}

public RenderStyleIcon getRenderStyleIcon(String name) {
  return RENDER_STYLES.get(name);
}

public RenderStyleIcon getDefaultIdle() {
  return getRenderStyleIcon(DEFAULT_IDLE);
}

public void setDefaultIdle(RenderStyleIcon RenderStyleIcon, boolean overideIfExists) {
  setRenderStyleIcon(DEFAULT_IDLE, RenderStyleIcon, overideIfExists);
}

public RenderStyleIcon getDefaultHighlighted() {
  return getRenderStyleIcon(DEFAULT_HIGHLIGHTED);
}

public void setDefaultHighlighted(RenderStyleIcon RenderStyleIcon, boolean overideIfExists) {
  setRenderStyleIcon(DEFAULT_HIGHLIGHTED, RenderStyleIcon, overideIfExists);
}

public RenderStyleIcon getDefaultSelected() {
  return getRenderStyleIcon(DEFAULT_SELECTED);
}

public void setDefaultSelected(RenderStyleIcon RenderStyleIcon, boolean overideIfExists) {
  setRenderStyleIcon(DEFAULT_SELECTED, RenderStyleIcon, overideIfExists);
}

public RenderStyleIcon getAmenitysIdle() {
  return getRenderStyleIcon(AMENITYS_IDLE);
}

public void setAmenitysIdle(RenderStyleIcon RenderStyleIcon, boolean overideIfExists) {
  setRenderStyleIcon(AMENITYS_IDLE, RenderStyleIcon, overideIfExists);
}

public RenderStyleIcon getAmenitysSelected() {
  return getRenderStyleIcon(AMENITYS_SELECTED);
}

public void setAmenitysSelected(RenderStyleIcon RenderStyleIcon, boolean overideIfExists) {
  setRenderStyleIcon(AMENITYS_SELECTED, RenderStyleIcon, overideIfExists);
}

public RenderStyleIcon getMovers() {
  return getRenderStyleIcon(MOVERS);
}

public void setMovers(RenderStyleIcon RenderStyleIcon, boolean overideIfExists) {
  setRenderStyleIcon(MOVERS, RenderStyleIcon, overideIfExists);
}


}