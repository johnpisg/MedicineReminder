package com.jibestream.jibestreamandroidlibrary.shapes;

import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.RectF;

import com.jibestream.jibestreamandroidlibrary.main.GUID;
import com.jibestream.jibestreamandroidlibrary.main.IElementProxyDirty;

/**
 * Base class which implements IShape.
 * Classes extending must override fn onDraw and
 * getBBox with desired logic.
 * <p/>
 * Developers can therefore inherit from this class to
 * create any desired shapes.
 * <p/>
 * Created by Emmanuel on 11/05/14.
 */
public class Shape implements IShape {
private static final String TAG = "Shape";
public final int id;
private final RectF bbox = new RectF();
private final Object lockOffsets = new Object();
private float offsetX;
private float offsetY;
private IElementProxyDirty elementProxyDirty;

public Shape() {
  this.id = GUID.get();
}

@Override
public void onDraw(Canvas canvas, Paint paint) {
}

@Override
public void setElementProxyDirty(IElementProxyDirty elementProxyDirty) {
  this.elementProxyDirty = elementProxyDirty;
}

public IElementProxyDirty getElementProxyDirty() {
  return elementProxyDirty;
}

@Override
public void setBBox(RectF bbox) {
  synchronized (bbox) {
    this.bbox.set(bbox);
    this.bbox.offset(offsetX, offsetY);
    final IElementProxyDirty elementProxyDirty = getElementProxyDirty();
    if (elementProxyDirty != null) elementProxyDirty.setDirtyShape(true);
  }
}

@Override
public RectF getBBox() {
  synchronized (bbox) {
    return bbox;
  }
}

@Override
public float getOffsetX() {
  synchronized (lockOffsets) {
    return offsetX;
  }
}

@Override
public void setOffsetX(float offsetX) {
  synchronized (lockOffsets) {
    bbox.offset(-this.offsetX, 0);
    bbox.offset(offsetX, 0);
    this.offsetX = offsetX;
    if (elementProxyDirty != null) elementProxyDirty.setDirtyShape(true);
  }
}

@Override
public float getOffsetY() {
  synchronized (lockOffsets) {
    return offsetY;
  }
}

@Override
public void setOffsetY(float offsetY) {
  synchronized (lockOffsets) {
    bbox.offset(0, -this.offsetY);
    bbox.offset(0, offsetY);
    this.offsetY = offsetY;
    if (elementProxyDirty != null) elementProxyDirty.setDirtyShape(true);
  }
}
}