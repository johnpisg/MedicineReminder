/*
 * Created by emmanuel on 8/28/2015.
 * Copyright 2015 Westfield Labs. All rights reserved.
 */

package com.jibestream.androidsdk.customElements;
//package com.westfield.centre.views.maps.customelements;

import android.content.Context;
import android.graphics.Color;
import android.graphics.Paint;

import com.jibestream.androidsdk.customShape.PinShape;
import com.jibestream.jibestreamandroidlibrary.main.Camera;
import com.jibestream.jibestreamandroidlibrary.main.M;
import com.jibestream.jibestreamandroidlibrary.styles.RenderStyle;

/**
 * PinWithShape.
 */
public class PinWithShape extends com.jibestream.jibestreamandroidlibrary.elements.Pin {
//public class Pin extends com.jibestream.jibestreamandroidlibrary.elements.Pin {

public static Context context;

private static String storeNameString;
private static String floorTitleString;
private static boolean updateRequired;
public final PinShape pinShape;
public RenderStyle renderStyleTransparent;
public RenderStyle renderStyleBlack;



/**
 * Default Constructor.
 */
public PinWithShape() {
  super();
  pinShape = new PinShape();
  this.setShape(pinShape);
  //
  this.setHeadsUp(true);
  this.setConstantScale(true);
  setSelectable(true);
  //
  // TODO: 2016-02-17 uncomment following
//  pinShape.mWidth = getDimen(R.dimen.westfield_map_popup_small_width);
//  pinShape.mMinHeight = getDimen(R.dimen.westfield_map_popup_small_min_height);
//  pinShape.mHeightPointer = getDimen(R.dimen.westfield_map_popup_height_pointer);
//  pinShape.mPadding = getDimen(R.dimen.westfield_map_popup_padding);
//  pinShape.mPaddingText = getDimen(R.dimen.westfield_map_popup_padding_text);
  //
   renderStyleBlack = new RenderStyle(Paint.Style.FILL);
  // TODO: 2016-02-17 uncomment following
//  renderStyleBlack.setFillColor(ContextCompat.getColor(context, R.color.map_popup));
  // TODO: 2016-02-17 delete following
  renderStyleBlack.setFillColor(Color.BLACK);
  //
  renderStyleTransparent = new RenderStyle(Paint.Style.FILL);
  // TODO: 2016-02-17 uncomment following
//  renderStyleTransparent.setFillColor(ContextCompat.getColor(context, android.R.color.transparent));
  // TODO: 2016-02-17 delete following
  renderStyleTransparent.setFillColor(Color.argb(55, 0, 0, 0));
  // // TODO: 2016-02-17 select the background color for the ballon
  //  setStyleIdle(renderStyleBlack);
  setStyleIdle(renderStyleTransparent);
}

@Override
public void onCreate(Context context, M m, long timeElapsed, long timeTotal, Camera camera) {
// TODO: 2016-02-17 uncomment following with the next sdk release
  // setIsInitialized(true);
  // pinShape.onCreate(context);
}

@Override
public void onUpdate(M m, long timeElapsed, long timeTotal, int fps, Camera camera) {
  super.onUpdate(m, timeElapsed, timeTotal, fps, camera);
  if (PinWithShape.updateRequired) {
    PinWithShape.updateRequired = false;
    pinShape.calc(storeNameString, floorTitleString);
  }
}

/**
 * Sets the store name.
 *
 * @param storeNameString name to be set
 */
public static void setStoreNameString(String storeNameString) {
  PinWithShape.storeNameString = storeNameString;
  PinWithShape.updateRequired = true;
  // you can call pinShape.calc(); if updateRequired is not required to be acceded from elsewhere
}

/**
 * Sets the floor name.
 *
 * @param floorTitleString name to be set
 */
public static void setFloorTitleString(String floorTitleString) {
  PinWithShape.floorTitleString = floorTitleString;
  PinWithShape.updateRequired = true;
  // you can call pinShape.calc(); if updateRequired is not required to be acceded from elsewhere
}
}
