package com.jibestream.androidsdk.customElements;

import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Path;

import com.jibestream.jibestreamandroidlibrary.elements.ElementHUD;
import com.jibestream.jibestreamandroidlibrary.main.Camera;
import com.jibestream.jibestreamandroidlibrary.main.M;
import com.jibestream.jibestreamandroidlibrary.math.Transform;
import com.jibestream.jibestreamandroidlibrary.shapes.Circle;
import com.jibestream.jibestreamandroidlibrary.utils.ColorsMaterialDesign;

/**
 * Created by emmanuel on 15-07-05.
 */
public class Compass extends ElementHUD {
private final Circle circle;
private final Paint pC;
private final Paint pTT;
private final Paint pTB;
private Path trigTop = new Path();
private Path trigBot = new Path();

public Compass() {
  super();

  setInViewSpace(true);
  circle = new Circle(50);

  trigTop.moveTo(-10, 0);
  trigTop.lineTo(0, -30);
  trigTop.lineTo(10, 0);
  trigTop.close();

  trigBot.moveTo(-10, 0);
  trigBot.lineTo(0, 30);
  trigBot.lineTo(10, 0);
  trigBot.close();


  pC = new Paint();
  pC.setColor(Color.WHITE);
  pC.setStyle(Paint.Style.FILL);
  pC.setAlpha(60);


  pTT = new Paint();
  pTT.setColor(ColorsMaterialDesign.REDJS);
  pTT.setStyle(Paint.Style.FILL);

  pTB = new Paint();
  pTB.setColor(ColorsMaterialDesign.GREY4);
  pTB.setStyle(Paint.Style.FILL);
}

@Override
public void onUpdate(M m, long timeElapsed, long timeTotal, int fps, Camera camera) {
//  super.onPreRender(timeElapsed, timeTotal, fps, camera, viewport);
  final Transform transform = getTransform();
  transform.setRotation(-camera.getRoll());
  transform.setTranslationX(camera.getViewport().centerX());
  transform.setTranslationY(80);
  getTransformation().set(transform.getGlobalMatrix());
}

/**
 * Bypassing frameworks logic for displaying elements states
 * by overriding Elements onRender function.
 * With an effect the different states as highlightState and selectedState
 * wont be visually reflected
 * but they are not needed in this context.
 */
@Override
public void onRender(Canvas canvas, Paint touchPaint) {
  circle.onDraw(canvas, pC);
  canvas.drawPath(trigTop, pTT);
  canvas.drawPath(trigBot, pTB);
}
}
