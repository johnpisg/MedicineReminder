package com.jibestream.androidsdk.customShape;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.RectF;
import android.text.TextPaint;

import com.jibestream.jibestreamandroidlibrary.shapes.JPath;
import com.jibestream.jibestreamandroidlibrary.shapes.Rectangle;
import com.jibestream.jibestreamandroidlibrary.shapes.Shape;
import com.jibestream.jibestreamandroidlibrary.shapes.TextStaticLayout;

/**
 * Created by emmanuel on 2016-02-17.
 */
public class PinShape extends Shape {

private Rectangle mStoreShape;
private TextStaticLayout mStoreNameStaticLayout;
private TextStaticLayout mFloorStaticLayout;
private JPath mJPath;
private Path mPath;
public int mWidth = 170;
public int mMinHeight = 75;
public int mHeightPointer = 10;
public int mPadding = 10;
public int mPaddingText = 5;
private Context context;

public PinShape() {

  /// Background shape
  mJPath = new JPath();
  mPath = new Path();
  mJPath.setPath(mPath);
  // // TODO: 2016-02-17  do you need rect?
  this.mStoreShape = new Rectangle(0, 0, mWidth, 0);
  this.mStoreNameStaticLayout = new TextStaticLayout();
  this.mFloorStaticLayout = new TextStaticLayout();

  //
  // TODO: 2016-02-17 remove following
  onCreate(null);
  calc("xxx", "yyyy");
}

public void onCreate(Context context) {
  this.context = context;
  //
  // TODO: 2016-02-17 uncomment following
//  int textColor = ContextCompat.getColor(context, android.R.color.white);
  int textColor = Color.WHITE;
  // store name
  TextPaint storeNamePaint = new TextPaint();
  // TODO: 2016-02-17 uncomment following
//  storeNamePaint.setTextSize(getDimen(R.dimen.westfield_text_large));
  // TODO: 2016-02-17 delete following
  storeNamePaint.setTextSize(33);
  storeNamePaint.setColor(textColor);
  storeNamePaint.setTextAlign(Paint.Align.CENTER);
  // floor name
  TextPaint subTitlePaint = new TextPaint();
  // TODO: 2016-02-17 uncomment following
//  subTitlePaint.setTextSize(getDimen(R.dimen.westfield_text_small_medium));
  // TODO: 2016-02-17 delete following
  subTitlePaint.setTextSize(33);
  subTitlePaint.setColor(textColor);
  subTitlePaint.setTextAlign(Paint.Align.CENTER);
  /// Assign
  mStoreNameStaticLayout.setTextPaint(storeNamePaint);
  mFloorStaticLayout.setTextPaint(subTitlePaint);
}

private int getDimen(int resId) {
  // context can be null here, according to crashlog. return 0.
  if (null == context) {
    return 0;
  }
  return context.getResources().getDimensionPixelOffset(resId);
}

public void calc(String storeNameString, String floorTitleString) {

  //set store name and floor text
  mStoreNameStaticLayout.setTextString(storeNameString);
  mFloorStaticLayout.setTextString(floorTitleString);
  //set store name and floor width
  int widthText = mWidth - (mPadding * 2);
  mStoreNameStaticLayout.setWidth(widthText);
  mFloorStaticLayout.setWidth(widthText);
  //set store name and floor offset x
  mStoreNameStaticLayout.setOffsetX(mWidth / 2);
  mFloorStaticLayout.setOffsetX(mWidth / 2);

  //calculate dynamic height
  int heightTexts = (int) (mStoreNameStaticLayout.getBBox().height() +
      mPaddingText + mFloorStaticLayout.getBBox().height());
  int height = (heightTexts > mMinHeight ? heightTexts : mMinHeight) + (mPadding * 2);

  //set heights of shapes
  mStoreShape.setBottom(height);
  //set store name and floor offset y
  int offsetTop = (height - heightTexts) / 2;
  mStoreNameStaticLayout.setOffsetY(offsetTop);
  mFloorStaticLayout.setOffsetY(offsetTop + mStoreNameStaticLayout.getBBox().height() + mPaddingText);


  //set background path
  mPath.reset();
  mPath.moveTo(0.0F, 0.0F);
  mPath.lineTo((float) mWidth, 0.0F);
  mPath.lineTo((float) mWidth, height);
  float halfW = (float) mWidth * 0.5F;
  mPath.lineTo(halfW + mHeightPointer, height);
  mPath.lineTo(halfW, height + mHeightPointer);
  mPath.lineTo(halfW - mHeightPointer, height);
  mPath.lineTo(0.0F, height);
  mPath.close();

  setOffsetX(-halfW);
  setOffsetY(-height - 50f);
}

@Override
public void onDraw(Canvas canvas, Paint paint) {
  mJPath.onDraw(canvas, paint);
  mStoreShape.onDraw(canvas, paint);
  mStoreNameStaticLayout.onDraw(canvas, null);
  mFloorStaticLayout.onDraw(canvas, null);
}

// Define bbox if collision detection required
@Override
public RectF getBBox() {
  return super.getBBox();
}
}
