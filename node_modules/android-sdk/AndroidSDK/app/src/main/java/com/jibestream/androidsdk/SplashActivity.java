package com.jibestream.androidsdk;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.widget.Toast;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.jibestream.jibestreamandroidlibrary.http.BasicAuthentication;
import com.jibestream.jibestreamandroidlibrary.http.HttpClient;
import com.jibestream.jibestreamandroidlibrary.mapBuilderV3.NovomapV3Api;
import com.jibestream.jibestreamandroidlibrary.mapBuilderV3.dataObjects.Location;
import com.jibestream.jibestreamandroidlibrary.utils.InternalStorage;

import java.io.IOException;
import java.lang.reflect.Type;

public class SplashActivity extends Activity {
private static final String TAG = "SplashActivity";
public static final String FILENAME = "locations";
//public static final String FILENAME = "locationsGGP";
//public static final String FILENAME = "locationsIvanhoe";

@Override
protected void onCreate(Bundle savedInstanceState) {
  super.onCreate(savedInstanceState);
  setContentView(R.layout.activity_splash);
  //
  int projectID;
  String url;
  BasicAuthentication basicAuthentication = null;
//  url = "http://ivanhoe.js-network.co";//<<<<<<<<<<<  Ivanhoe
//  projectID = 2;
//  url = "http://developer.js-network.co"; // JS DEVELOPER 271
//  projectID = 271;
//  url = "http://216.254.186.73:3344"; // AMGEN 324
//  projectID = 324;
//  url = "https://westfield.js-network.co"; // WF
//  url = "https://maps.westfield.io"; // WF app url <<<<<<<<
//  projectID = 301;// WF BelconnenÂ§
//  projectID = 263;// WF SFC
//  projectID = 264;// WF London
//  projectID = 332;// WF Mount Druitt > zones
//  url = "https://ggp.js-network.co"; // <<<<<<<<<<  GGP PRODUCTION
  url = "https://ggpparking.js-network.co"; // <<<<<<<<<<  GGP PARKING
//  url = "https://ggp.js-network.co:9443"; // <<<<<<<<<<  GGP UAT
//    url = "https://ggpuat.js-network.co"; // <<<<< GGP UAT UPDATED
//    url = "https://qaggp.js-network.co";
  //
//  url = "http://192.168.2.90:8080";//Gopals server
  //
//  url = "http://js-devbox.cloudapp.net:8080";//3.3 server A
//  url = "https://qaggp.js-network.co";//3.3 server B
  //
//  url = "http://maf.southeastasia.cloudapp.azure.com:8080"; // MAF
  //
//  projectID = 1059;// GGP Glendale Galleria
//  projectID = 1113;// GGP Oakbrook
//  projectID = 1111;// GGP Christian
//  projectID = 1074;// GGP Meadows Mall
//  projectID = 1084;// GGP Staten Island Mall
//  projectID = 1104;// GGP Paramus
//  projectID = 1091;// GGP Fashion Show
//  projectID = 658;// GGP Mayfair
//  projectID = 1009;// GGP Glenbrook Square
//  basicAuthentication = new BasicAuthentication("t3","pJ8CnUvS","XIDB144439osqt9848687KAJNTES1444","en"); // GGP UAT
//  basicAuthentication = new BasicAuthentication("jsapiclient", "JSapi23", "JMJ143880vl1045185ENRLW143880fz1", "en"); // GGP Prod


  //
  boolean fileExists = InternalStorage.fileExists(getApplicationContext(), FILENAME);
  if (fileExists) {
    String json = null;
    try {
      json = InternalStorage.readFile(getApplicationContext(), FILENAME);
    } catch (IOException e) {
      e.printStackTrace();
      callLocations(getApplicationContext(), url, basicAuthentication);
    }
    Location[] locations = getLocationsFromDisk(getApplicationContext(), FILENAME, json);
    launchActivity(url, locations, basicAuthentication);
  } else {
    callLocations(getApplicationContext(), url, basicAuthentication);
  }
}


private void callLocations(final Context context, final String url, final BasicAuthentication basicAuthentication) {
  final String myurl = NovomapV3Api.getLocation(url);
  HttpClient.downloadUrl(myurl, new HttpClient.DownloadCallbacks() {
    @Override
    public void onSuccess(String response) {
      InternalStorage.saveFile(context, FILENAME, response);
      Location[] locations = getLocationsFromDisk(context, FILENAME, response);
      launchActivity(url, locations, basicAuthentication);
//              Log.i(TAG, "all locations " + response);
    }

    @Override
    public void onError(int responseCode) {
      Log.i(TAG, "cant start all locations ");
      runOnUiThread(
          new Runnable() {
            @Override
            public void run() {
              Toast.makeText(context, "cant start all locations Bye now ", Toast.LENGTH_LONG).show();
              finish();
            }
          }
      );
    }
  }, basicAuthentication);
}

private Location[] getLocationsFromDisk(Context context, String filename, String json) {
  Gson gson = new Gson();
  Type type = new TypeToken<Location[]>() {
  }.getType();
  Location[] locations = gson.fromJson(json, type);
  return locations;
}

private void launchActivity(String url, Location[] locations, BasicAuthentication basicAuthentication) {
  Intent intent = new Intent(SplashActivity.this, VenuesSelectionActivity.class);
  intent.putExtra("locations", locations);
  intent.putExtra("url", url);
  intent.putExtra("basicAuthentication", basicAuthentication);
  startActivity(intent);
}

}
